|-- CONTRIBUTING.md
|-- Extra/
  |-- Old/
    |-- Projeto Landing Page para Empresa de Proteção Veic.pdf
    |-- e o esquma de templates tem para nuxt_ de landing.pdf
    |-- melhor melhor o uso de cada ferramentas ocm exempl.pdf
  |-- Teste Prático - Desencolvimento de projeto com IA.pdf
  |-- ideas.txt.txt
  |-- me dê o escopo do projeto inteiro com huggin face.pdf
|-- LICENSE
|-- README.md
|-- READMEd.md
|-- assets/
  |-- css/
|-- components/
  |-- base/
    |-- Button.vue
    |-- Footer.vue
    |-- Navbar.vue
    |-- Section.vue
  |-- landing/
    |-- ChatBot.vue
    |-- ContactForm.vue
    |-- FAQ.vue
    |-- Hero.vue
    |-- Pricing.vue
    |-- Services.vue
    |-- Testimonials.vue
|-- mixins/
  |-- aos.ts
|-- nuxt.config.js
|-- package-lock.json
|-- package.json
|-- pages/
  |-- index.vue
|-- plugins/
  |-- mdi.ts
  |-- smooth-scroll.ts
|-- public/
  |-- favicon.ico
  |-- favicon.svg
  |-- img/
|-- server/
  |-- api/
    |-- chat.post.ts
|-- tailwind.config.js


File contents:

|-- CONTRIBUTING.md
  Content:
    All Contributors
    - Lipelacross (Creator)
|-- Extra/
  |-- Old/
    |-- Projeto Landing Page para Empresa de Proteção Veic.pdf
    |-- e o esquma de templates tem para nuxt_ de landing.pdf
    |-- melhor melhor o uso de cada ferramentas ocm exempl.pdf
  |-- Teste Prático - Desencolvimento de projeto com IA.pdf
  |-- ideas.txt.txt
  |-- me dê o escopo do projeto inteiro com huggin face.pdf
|-- LICENSE
|-- README.md
  Content:
    # NEFA Landing Page
    
    Free landing page template built using Nuxt 2 and Tailwindcss 3
    
    > [LIVE DEMO](https://nefa.vercel.app/)
    
    ![Thumbnail](assets/img/thumbnail.jpg)
    
    ## Project Structure
    
    .  
    ├── assets  
    │ ├── css  
    │ └── img  
    ├── components  
    │ └── base  
    ├── layouts  
    ├── mixins  
    ├── pages  
    ├── plugins  
    ├── static  
    ├── README.md  
    ├── nuxt.config.js  
    ├── package.json  
    └── tailwind.config.js  
    
    ## Getting Started
    
    ```bash
    # clone this repository or click 'use this template' button
    $ git clone https://github.com/RSurya99/nefa.git
    
    # install dependencies
    $ yarn install
    
    # serve with hot reload at localhost:3000
    $ yarn dev
    
    # build for production and launch server
    $ yarn build
    $ yarn start
    
    # generate static project
    $ yarn generate
    ```
    
    ## Other version of NEFA
    - [React NEFA](https://github.com/hakimov-dev/nefa-react) by [Muhammadamin](https://github.com/hakimov-dev)
    
    Use it for learn, but please don’t republish, redistribute, or resell the template.
    
    Code by [rsurya99](https://github.com/rsurya99)  
    UI/UX by [irvanmoses](https://www.facebook.com/irvan.moses)
|-- READMEd.md
  Content:
    # AEGMEDIA-TEST
    
    [![Nuxt UI Pro](https://img.shields.io/badge/Made%20with-Nuxt%20UI%20Pro-00DC82?logo=nuxt&labelColor=020420)](https://ui.nuxt.com/pro)
    [![Deploy to NuxtHub](https://img.shields.io/badge/Deploy%20to-NuxtHub-00DC82?logo=nuxt&labelColor=020420)](https://hub.nuxt.com/new?repo=nuxt-ui-pro/landing)
    
    This template lets you build a landing page with [Nuxt UI Pro](https://ui.nuxt.com/pro) quickly.
    
    - [Live demo](https://landing-template.nuxt.dev/)
    - [Documentation](https://ui.nuxt.com/getting-started/installation/pro/nuxt)
    
    <a href="https://landing-template.nuxt.dev/" target="_blank">
      <picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://assets.hub.nuxt.com/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cmwiOiJodHRwczovL2xhbmRpbmctdGVtcGxhdGUubnV4dC5kZXYiLCJpYXQiOjE3Mzk0NjMzNzV9.ja2nUDVOoIFvyaMmg9Jn51uNMoYYt4WA1KWUQBWwUPo.jpg?theme=dark">
        <source media="(prefers-color-scheme: light)" srcset="https://assets.hub.nuxt.com/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cmwiOiJodHRwczovL2xhbmRpbmctdGVtcGxhdGUubnV4dC5kZXYiLCJpYXQiOjE3Mzk0NjMzNzV9.ja2nUDVOoIFvyaMmg9Jn51uNMoYYt4WA1KWUQBWwUPo.jpg?theme=light">
        <img alt="Nuxt Landing Template" src="https://assets.hub.nuxt.com/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cmwiOiJodHRwczovL2xhbmRpbmctdGVtcGxhdGUubnV4dC5kZXYiLCJpYXQiOjE3Mzk0NjMzNzV9.ja2nUDVOoIFvyaMmg9Jn51uNMoYYt4WA1KWUQBWwUPo.jpg">
      </picture>
    </a>
    
    ## Quick Start
    
    ```bash [Terminal]
    npx nuxi init -t github:nuxt-ui-pro/landing
    ```
    
    ## Setup
    
    Make sure to install the dependencies:
    
    ```bash
    pnpm install
    ```
    
    ## Development Server
    
    Start the development server on `http://localhost:3000`:
    
    ```bash
    pnpm dev
    ```
    
    ## Production
    
    Build the application for production:
    
    ```bash
    pnpm build
    ```
    
    Locally preview production build:
    
    ```bash
    pnpm preview
    ```
    
    Check out the [deployment documentation](https://nuxt.com/docs/getting-started/deployment) for more information.
    
    ## Renovate integration
    
    Install [Renovate GitHub app](https://github.com/apps/renovate/installations/select_target) on your repository and you are good to go.
|-- assets/
  |-- css/
|-- components/
  |-- base/
    |-- Button.vue
      Content:
        ;<template>
          <button
            class="text-sm text-center rounded-full hover:shadow-md hover:shadow-[#0c66ee]/50 transition duration-300"
            v-bind="$attrs"
            v-on="$listeners"
          >
            <slot></slot>
          </button>
        </template>
        <script>
        export default {
          name: 'BaseButton',
          inheritAttrs: false,
        }
        </script>
    |-- Footer.vue
      Content:
        <template>
          <footer class="max-w-screen-xl px-8 mx-auto">
            <div class="w-full border-y border-gray-200">
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-0">
                <!-- Seção Logo e Links Rápidos -->
                <div class="p-6 lg:p-12 flex flex-col lg:flex-row lg:items-start lg:gap-10 border-b md:border-b-0 md:border-r border-gray-200">
                  <NuxtLink to="/" class="hidden xl:block mb-6 lg:mb-0">
                    <NuxtImg src="/img/logo/nefa.svg" width="96" height="40" alt="NEFA Logo" class="w-24" />
                  </NuxtLink>
                  <ul class="space-y-4">
                    <NavLink v-for="link in quickLinks" :key="link.name" :name="link.name" :url="link.url" />
                  </ul>
                </div>
        
                <!-- Seção Institucional -->
                <div class="p-6 lg:p-12 border-b md:border-b-0 lg:border-r border-gray-200">
                  <ul class="space-y-4">
                    <NavLink v-for="link in institutional" :key="link.name" :name="link.name" :url="link.url" />
                  </ul>
                </div>
        
                <!-- Seção Suporte -->
                <div class="p-6 lg:p-12 border-b md:border-b-0 border-gray-200">
                  <ul class="space-y-4">
                    <NavLink v-for="link in support" :key="link.name" :name="link.name" :url="link.url" />
                  </ul>
                </div>
        
                <!-- Newsletter -->
                <div class="p-6 lg:p-12 space-y-6">
                  <div class="space-y-2">
                    <h3 class="text-sm font-semibold text-gray-600">Newsletter</h3>
                    <p class="text-sm text-gray-500">Receba atualizações e insights exclusivos</p>
                  </div>
                  <form @submit.prevent="subscribeNewsletter" class="flex gap-2">
                    <input
                      v-model="email"
                      type="email"
                      placeholder="Seu melhor e-mail"
                      class="w-full px-4 py-3 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      required
                    />
                    <button
                      type="submit"
                      class="px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                    >
                      <ArrowRightIcon class="w-5 h-5" />
                    </button>
                  </form>
                </div>
              </div>
            </div>
        
            <!-- Copyright -->
            <div class="py-8 text-center text-sm text-gray-500">
              &copy; {{ new Date().getFullYear() }} NEFA LLC. Todos os direitos reservados
            </div>
          </footer>
        </template>
        
        <script setup lang="ts">
        const email = ref('')
        
        const quickLinks = [
          { name: 'Criptomoedas', url: '#' },
          { name: 'Exchanges', url: '#' },
          { name: 'Watchlist', url: '#' },
          { name: 'Portfólio', url: '#' },
          { name: 'NFT', url: '#' }
        ]
        
        const institutional = [
          { name: 'Produtos', url: '#' },
          { name: 'Sobre Nós', url: '#' },
          { name: 'Carreiras', url: '#' },
          { name: 'Blog', url: '#' },
          { name: 'Segurança', url: '#' }
        ]
        
        const support = [
          { name: 'Central de Ajuda', url: '#' },
          { name: 'Contato', url: '#' },
          { name: 'Status do Sistema', url: '#' },
          { name: 'Política de Privacidade', url: '#' }
        ]
        
        const subscribeNewsletter = () => {
          // Lógica de inscrição
          console.log('E-mail cadastrado:', email.value)
          email.value = ''
        }
        </script>
    |-- Navbar.vue
      Content:
        <template>
          <nav class="sticky top-0 bg-white/95 backdrop-blur-md z-50 shadow-sm">
            <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
              <div class="flex items-center justify-between h-16 lg:h-20">
                <!-- Logo -->
                <NuxtLink to="/" class="flex-shrink-0 hover:opacity-80 transition-opacity">
                  <NuxtImg
                    src="/img/logo/nefa.svg"
                    width="112"
                    height="48"
                    alt="NEFA Logo"
                    class="h-12 w-28 lg:h-14 lg:w-32"
                    loading="eager"
                  />
                </NuxtLink>
        
                <!-- Desktop Navigation -->
                <div class="hidden lg:flex items-center gap-8">
                  <NavLink
                    v-for="link in mainLinks"
                    :key="link.name"
                    v-bind="link"
                    class="text-gray-600 hover:text-blue-600 transition-colors"
                  />
        
                  <!-- Products Dropdown -->
                  <div ref="dropdownRef" class="relative">
                    <button
                      @click="toggleDropdown"
                      class="flex items-center gap-1 text-gray-600 hover:text-blue-600 transition-colors"
                      aria-haspopup="true"
                      :aria-expanded="isDropdownOpen"
                    >
                      <span>Produtos</span>
                      <Icon
                        name="material-symbols:keyboard-arrow-down-rounded"
                        class="w-5 h-5 transition-transform duration-200"
                        :class="{ 'rotate-180': isDropdownOpen }"
                      />
                    </button>
        
                    <Transition name="slide">
                      <div
                        v-if="isDropdownOpen"
                        class="absolute top-full left-0 w-48 mt-2 bg-white rounded-lg shadow-xl ring-1 ring-gray-900/5"
                      >
                        <NuxtLink
                          v-for="product in products"
                          :key="product.name"
                          :to="product.url"
                          class="block px-4 py-2.5 text-sm text-gray-7 hover:bg-gray-50/50 transition-colors"
                          @click="isDropdownOpen = false"
                        >
                          {{ product.name }}
                        </NuxtLink>
                      </div>
                    </Transition>
                  </div>
                </div>
        
                <!-- Auth Buttons -->
                <div class="flex items-center gap-3">
                  <BaseButton
                    variant="outline"
                    class="max-lg:hidden px-6 py-2.5 border-blue-600 text-blue-600 hover:bg-blue-50"
                  >
                    Entrar
                  </BaseButton>
                  <BaseButton class="px-6 py-2.5 bg-gradient-to-r from-blue-600 to-blue-500 hover:shadow-lg">
                    Cadastre-se
                  </BaseButton>
                </div>
        
                <!-- Mobile Menu Toggle -->
                <button
                  @click="isMobileMenuOpen = !isMobileMenuOpen"
                  class="lg:hidden p-2 rounded-lg text-gray-600 hover:bg-gray-100"
                  aria-label="Menu mobile"
                >
                  <Icon
                    :name="isMobileMenuOpen ? 'material-symbols:close-rounded' : 'material-symbols:menu-rounded'"
                    class="w-6 h-6"
                  />
                </button>
              </div>
        
              <!-- Mobile Menu -->
              <Transition name="slide">
                <div v-if="isMobileMenuOpen" class="lg:hidden py-4 space-y-2">
                  <NavLink
                    v-for="link in mainLinks"
                    :key="link.name"
                    v-bind="link"
                    class="block px-4 py-2.5 rounded-lg hover:bg-gray-50"
                    @click="isMobileMenuOpen = false"
                  />
                </div>
              </Transition>
            </div>
          </nav>
        </template>
        
        <script setup lang="ts">
        import { ref } from 'vue'
        import { onClickOutside } from '@vueuse/core'
        
        const isDropdownOpen = ref(false)
        const isMobileMenuOpen = ref(false)
        const dropdownRef = ref<HTMLElement | null>(null)
        
        const mainLinks = [
          { name: 'Criptomoedas', url: '#' },
          { name: 'Exchanges', url: '#' },
          { name: 'Watchlist', url: '#' },
          { name: 'NFT', url: '#' },
          { name: 'Portfólio', url: '#' }
        ]
        
        const products = [
          { name: 'Exchange', url: '#' },
          { name: 'Carteira', url: '#' },
          { name: 'Explorador', url: '#' },
          { name: 'Gráficos', url: '#' }
        ]
        
        const toggleDropdown = () => {
          isDropdownOpen.value = !isDropdownOpen.value
        }
        
        onClickOutside(dropdownRef, () => {
          isDropdownOpen.value = false
        })
        </script>
    |-- Section.vue
      Content:
        <template>
          <div class="relative max-w-screen-xl px-4 sm:px-8 mx-auto grid grid-cols-12 gap-x-6 overflow-hidden" v-bind="$attrs">
            <slot></slot>
          </div>
        </template>
        <script>
        export default {
          name: 'BaseSection',
        }
        </script>
  |-- landing/
    |-- ChatBot.vue
      Content:
        <template>
          <div class="flex items-center space-x-4">
            <div class="lg:max-w-[336px] w-full flex items-center relative px-5 py-3 border border-[#0c66ee] rounded-xl">
              <span class="text-sm font-medium pr-5 py-3 text-[#0c66ee] border-r border-[#0c66ee]">{{ title }}</span>
              <input
                :type="type"
                class="w-full text-lg font-medium text-right border-none ring-0 focus:outline-none focus:ring-0"
                :name="name"
                :value="defaultValue"
              />
            </div>
            <div class="relative w-full max-w-[106px] sm:max-w-[159px]">
              <button
                type="button"
                class="w-full flex items-center justify-center space-x-1 relative sm:px-6 py-[1.35rem] border border-[#0c66ee] rounded-xl text-sm font-medium"
                @click="toggleDropdown"
                @blur="toggleDropdown"
              >
                <img :src="`/img/${exchangeSelected.img}`" alt="" class="flex-shrink-0 h-6 w-6 rounded-full" />
                <span class="ml-3 block truncate">{{ exchangeSelected.name }}</span>
                <ChevronDownIcon :size="20" />
              </button>
              <transition name="transform-fade-down">
                <ul
                  v-if="openDropdown"
                  class="absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm border border-[#0c66ee]"
                  tabindex="-1"
                >
                  <li
                    v-for="exchange in exchanges"
                    id="listbox-option-0"
                    :key="exchange.name"
                    class="text-gray-900 cursor-default select-none relative px-3 sm:px-5 py-2"
                    role="option"
                  >
                    <div class="flex items-center">
                      <img :src="`/img/${exchange.img}`" alt="" class="flex-shrink-0 h-6 w-6 rounded-full" />
                      <span class="font-normal ml-3 block truncate">{{ exchange.name }}</span>
                    </div>
                  </li>
                </ul>
              </transition>
            </div>
          </div>
        </template>
        
        <script setup>
        defineProps({
          title: {
            type: String,
            default: ''
          },
          name: {
            type: String,
            required: true,
            default: ''
          },
          defaultValue: {
            type: [Number, String],
            default: ''
          },
          exchangeSelected: {
            type: Object,
            required: true
          },
          exchanges: {
            type: Array,
            required: true
          },
          type: {
            type: String,
            default: 'text'
          }
        })
        
        const openDropdown = ref(false)
        const toggleDropdown = () => {
          openDropdown.value = !openDropdown.value
        }
        </script>
    |-- ContactForm.vue
      Content:
    |-- FAQ.vue
      Content:
    |-- Hero.vue
      Content:
        <template>
          <div class="col-span-12 lg:col-span-6" v-bind="$attrs">
            <div class="w-full">
              <img src="/img/buy-and-trade.webp" class="mt-4 sm:-mt-4" alt="" />
            </div>
          </div>
        </template>
    |-- Pricing.vue
      Content:
    |-- Services.vue
      Content:
        <template>
          <li class="space-y-2">
            <div class="flex items-center space-x-2">
              <CheckCircleIcon :size="20" class="text-[#0c66ee]" />
              <span>{{ title }}</span>
            </div>
            <slot></slot>
          </li>
        </template>
        <script setup>
        defineProps({
          title: {
            type: String,
            default: ''
          }
        })
        </script>
    |-- Testimonials.vue
      Content:
        <template>
          <div class="w-full lg:w-1/3 mt-6 lg:mt-0 overflow-hidden space-y-6" v-bind="$attrs">
            <div class="w-full flex items-center justify-between">
              <span class="font-medium">{{ title }}</span>
              <button
                class="px-3 py-1 text-sm font-medium text-blue-500 flex items-center space-x-1 rounded-md hover:bg-blue-50 transition duration-300"
              >
                <span>More</span>
                <ChevronRightIcon :size="16" />
              </button>
            </div>
            <div class="flex flex-col">
              <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="px-2 sm:px-6 py-2 align-middle inline-block min-w-full overflow-hidden">
                  <table class="min-w-full">
                    <thead>
                      <tr>
                        <th class="text-left text-sm font-medium text-gray-500">Name</th>
                        <th class="text-left text-sm font-medium text-gray-500">Price</th>
                        <th class="hidden sm:block text-left text-sm font-medium text-gray-500">Chart</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="data in datasets" :key="data.id" class="border-b border-gray-200">
                        <td class="py-4 whitespace-nowrap">
                          <div class="flex items-center space-x-2">
                            <NuxtImg
                              v-if="data.logo"
                              :src="`/img/crypto-icon/${data.logo}`"
                              :alt="data.name"
                              width="24"
                              height="24"
                              class="h-6 w-6"
                              loading="lazy"
                            />
                            <span v-if="!data.logo" class="h-6 w-6 flex items-center justify-center bg-gray-100 rounded-full"></span>
                            <span>{{ data.name }}</span>
                          </div>
                        </td>
                        <td class="py-4 whitespace-nowrap">
                          <div class="flex items-center">
                            <PlusThickIcon v-if="data.increase" :size="14" class="text-emerald-500" />
                            <MinusThickIcon v-else :size="14" class="text-red-500" />
                            <span>${{ data.price }}</span>
                          </div>
                        </td>
                        <td class="hidden sm:block whitespace-nowrap">
                          <div>
                            <LineChart class="w-28 h-12 -mx-2" :datasets="data.data" :increase="data.increase" />
                          </div>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </template>
        
        <script setup>
        defineProps({
          title: {
            type: String,
            default: ''
          },
          datasets: {
            type: Array,
            default: () => []
          }
        })
        </script>
|-- mixins/
  |-- aos.ts
    Content:
      import AOS from 'aos'
      import 'aos/dist/aos.css'
      
      export default {
        mounted() {
          AOS.init({ disable: 'phone' })
        }
      }
|-- nuxt.config.js
  Content:
    import svgLoader from 'vite-svg-loader'
    
    export default defineNuxtConfig({
      future: {
        compatibilityVersion: 4,
        compatibilityDate: '2025-06-12'
      },
      vite: {
        plugins: [
          svgLoader({
            svgoConfig: {
              multipass: true,
              plugins: [
                'preset-default',
                { name: 'removeDimensions', active: true },
                { name: 'sortAttrs', params: { xmlnsOrder: 'alphabetical' } }
              ]
            }
          })
        ]
      },
      modules: [
        '@nuxtjs/tailwindcss',
        '@nuxt/image',
        '@nuxtjs/turnstile',
        'nuxt-svgo-loader',
        '@nuxt/icon'
      ],
      icon: {
        iconify: {
          icons: [
            '@iconify-json/uil',
            '@iconify-json/material-design-icons'
          ]
        }
      },
      app: {
        head: {
          title: 'NEFA - Crypto Platform',
          htmlAttrs: {
            lang: 'pt-BR',
            dir: 'ltr'
          },
          meta: [
            { charset: 'utf-8' },
            { name: 'viewport', content: 'width=device-width, initial-scale=1' },
            {
              name: 'description',
              content: 'Plataforma líder em negociação de criptomoedas'
            },
            {
              property: 'og:image',
              content: '/og-image.jpg'
            }
          ],
          link: [
            {
              rel: 'icon',
              type: 'image/svg+xml',
              href: '/favicon.svg'
            },
            {
              rel: 'stylesheet',
              href: 'https://fonts.googleapis.com/css2?family=Poppins:wght@100..900&display=swap',
              crossorigin: 'anonymous'
            }
          ],
          script: [
            {
              src: 'https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js',
              defer: true,
              body: true
            }
          ]
        }
      },
      css: [
        '~/assets/css/main.css',
        'aos/dist/aos.css'
      ],
      components: {
        dirs: [
          '~/components',
          '~/components/base'
        ],
        global: true
      },
      postcss: {
        plugins: {
          '@tailwindcss/nesting': {},
          '@tailwindcss/postcss': {},
          autoprefixer: {},
          ...(process.env.NODE_ENV === 'production' ? { cssnano: {} } : {})
        }
      },
      // Correção: build deve estar dentro do objeto principal
      build: {
        transpile: ['vue-chart-3', 'chart.js']
      }
    })
|-- package-lock.json
|-- package.json
|-- pages/
  |-- index.vue
    Content:
|-- plugins/
  |-- mdi.ts
    Content:
      import { defineNuxtPlugin } from '#app'
      
      import ChevronDownIcon from 'vue-material-design-icons/ChevronDown.vue'
      import ChevronUpIcon from 'vue-material-design-icons/ChevronUp.vue'
      import ChevronRightIcon from 'vue-material-design-icons/ChevronRight.vue'
      import PlusThickIcon from 'vue-material-design-icons/PlusThick.vue'
      import MinusThickIcon from 'vue-material-design-icons/MinusThick.vue'
      import ArrowUpIcon from 'vue-material-design-icons/ArrowUp.vue'
      import ArrowRightIcon from 'vue-material-design-icons/ArrowRight.vue'
      import CheckCircleIcon from 'vue-material-design-icons/CheckCircle.vue'
      import SegmentIcon from 'vue-material-design-icons/Menu.vue'
      import CloseIcon from 'vue-material-design-icons/Close.vue'
      import MenuIcon from 'vue-material-design-icons/Menu.vue'
      import XIcon from 'vue-material-design-icons/Close.vue'
      
      export default defineNuxtPlugin((nuxtApp) => {
        nuxtApp.vueApp.component('ChevronDownIcon', ChevronDownIcon)
        nuxtApp.vueApp.component('ChevronUpIcon', ChevronUpIcon)
        nuxtApp.vueApp.component('ChevronRightIcon', ChevronRightIcon)
        nuxtApp.vueApp.component('PlusThickIcon', PlusThickIcon)
        nuxtApp.vueApp.component('MinusThickIcon', MinusThickIcon)
        nuxtApp.vueApp.component('ArrowUpIcon', ArrowUpIcon)
        nuxtApp.vueApp.component('ArrowRightIcon', ArrowRightIcon)
        nuxtApp.vueApp.component('CheckCircleIcon', CheckCircleIcon)
        nuxtApp.vueApp.component('SegmentIcon', SegmentIcon)
        nuxtApp.vueApp.component('CloseIcon', CloseIcon)
        nuxtApp.vueApp.component('MenuIcon', MenuIcon)
        // nuxtApp.vueApp.component('XIcon', XIcon)
      })
  |-- smooth-scroll.ts
    Content:
      import { defineNuxtPlugin } from '#app'
      import Vue3SmoothScroll from 'vue3-smooth-scroll'
      
      export default defineNuxtPlugin((nuxtApp) => {
        nuxtApp.vueApp.use(Vue3SmoothScroll, {
          duration: 1000,
          offset: -50
        })
      })
|-- public/
  |-- favicon.ico
  |-- favicon.svg
  |-- img/
|-- server/
  |-- api/
    |-- chat.post.ts
      Content:
|-- tailwind.config.js
  Content:
    module.exports = {
      content: [
        './components/**/*.{js,vue,ts}',
        './layouts/**/*.vue',
        './pages/**/*.vue',
        './plugins/**/*.{js,ts}',
        './app.vue',
        './nuxt.config.{js,ts}',
        './composables/**/*.{js,ts}',
        './utils/**/*.{js,ts}'
      ],
      theme: {
        fontFamily: {
          sans: ['Poppins', 'sans-serif'],
          mono: ['JetBrains Mono', 'monospace']
        },
        extend: {
          colors: {
            primary: {
              DEFAULT: '#2563eb',
              light: '#3b82f6',
              dark: '#1d4ed8'
            },
            dark: '#0f172a',
            secondary: {
              DEFAULT: '#e11d48',
              light: '#f43f5e'
            }
          },
          spacing: {
            18: '4.5rem',
            128: '32rem'
          },
          container: {
            center: true,
            padding: '1.5rem',
            screens: {
              '2xl': '1440px'
            }
          }
        },
      },
      plugins: [
        require('@tailwindcss/forms')({
          strategy: 'class'
        }),
        require('@tailwindcss/aspect-ratio'),
        require('@tailwindcss/container-queries'),
        require('@tailwindcss/typography')
      ],
      darkMode: 'class',
      corePlugins: {
        // Desativa o container padrão do Tailwind para usar sua configuração personalizada
        container: false
      }
    }
