name: CI/CD AutoShield

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION_CACHE_KEY: v1
  HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  BREVO_LIST_ID: ${{ secrets.BREVO_LIST_ID }}

jobs:
  ci:
    name: Build and Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20, 22]
      fail-fast: false

    permissions:
      contents: read
      security-events: write
      actions: read

    outputs:
      build-successful: ${{ steps.build.outcome == 'success' }}
      audit-results: ${{ steps.audit.outputs.vulnerabilities }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Cache Nuxt Build
        uses: actions/cache@v4
        with:
          path: |
            .nuxt
            node_modules
          key: ${{ runner.os }}-nuxt-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit
        env:
          NODE_ENV: development

      - name: Code Linting
        run: npm run lint
        continue-on-error: false

      - name: TypeScript Type Checking
        run: npm run typecheck
        continue-on-error: false

      - name: Build Application
        id: build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run Unit Tests
        run: npm run test:unit
        env:
          NODE_ENV: test

      - name: Run Component Tests
        run: npm run test:components
        env:
          NODE_ENV: test

      - name: Security Audit
        id: audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit-results.json || true
          echo "vulnerabilities=$(jq -r '.metadata.vulnerabilities.total // 0' npm-audit-results.json)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload Security Audit Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-node-${{ matrix.node }}-${{ github.run_number }}
          path: npm-audit-results.json
          retention-days: 30

      - name: Verify Commit Message
        if: github.event_name == 'push'
        run: |
          COMMIT_MSG=$(git log -1 --format=%s)
          if [[ ! "$COMMIT_MSG" =~ ^(feat|fix|docs|style|refactor|test|chore|deps)(\(.+\))?: .+ ]]; then
            echo "❌ Invalid commit message: $COMMIT_MSG"
            echo "Expected format: type(scope): description"
            echo "Valid types: feat, fix, docs, style, refactor, test, chore, deps"
            exit 1
          fi

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: ci
    if: always()

    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Production Dependencies
        run: npm ci --production

      - name: Advanced Security Audit
        id: security-audit
        run: |
          npm audit --audit-level=low --json > detailed-audit.json
          CRITICAL=$(jq -r '.metadata.vulnerabilities.critical // 0' detailed-audit.json)
          HIGH=$(jq -r '.metadata.vulnerabilities.high // 0' detailed-audit.json)
          
          echo "critical-vulns=$CRITICAL" >> $GITHUB_OUTPUT
          echo "high-vulns=$HIGH" >> $GITHUB_OUTPUT
          echo "security-status=$([ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ] && echo 'failed' || echo 'passed')" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload Detailed Audit
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detailed-security-audit-${{ github.run_number }}
          path: detailed-audit.json
          retention-days: 90

      - name: Security Summary
        if: always()
        run: |
          echo "## 🛡️ Security Report" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Status | ${{ steps.security-audit.outputs.security-status }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Critical Vulnerabilities | ${{ steps.security-audit.outputs.critical-vulns }} |" >> $GITHUB_STEP_SUMMARY
          echo "| High Vulnerabilities | ${{ steps.security-audit.outputs.high-vulns }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Analysis Date | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [ci, security-scan]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: autoshield-preview
          path: .output/public
          retention-days: 1

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [ci, security-scan]
    if: always()

    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "🚀 CI/CD Pipeline Completed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ github.workflow }}* - #${{ github.run_number }}\n*Status*: ${{ job.status }}\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View details>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
