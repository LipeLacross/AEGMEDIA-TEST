name: CI/CD AutoShield

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION_CACHE_KEY: v1

jobs:
  ci:
    name: Build and Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 20, 22 ]
      fail-fast: false

    permissions:
      contents: read
      security-events: write
      actions: read

    outputs:
      build-successful: ${{ steps.build.outcome == 'success' }}
      audit-results: ${{ steps.audit.outputs.vulnerabilities }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit
        env:
          NODE_ENV: development

      - name: Code Linting
        run: npm run lint
        continue-on-error: false

      - name: TypeScript Type Checking
        run: npm run typecheck
        continue-on-error: false

      - name: Build Application
        id: build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run Tests
        run: npm run test
        if: ${{ hashFiles('**/package.json') != '' && contains('["test"]', 'test') }}
        env:
          NODE_ENV: test

      - name: Security Audit
        id: audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit-results.json || true
          echo "vulnerabilities=$(cat npm-audit-results.json | jq '.metadata.vulnerabilities.total // 0')" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload Security Audit Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-node-${{ matrix.node }}-${{ github.run_number }}
          path: npm-audit-results.json
          retention-days: 30
          compression-level: 6

      - name: Verify Commit Message
        if: github.event_name == 'push'
        run: |
          COMMIT_MSG=$(git log -1 --format=%s)
          echo "Verificando mensagem: $COMMIT_MSG"
          
          if [[ "$COMMIT_MSG" =~ ^(feat|fix|docs|style|refactor|test|chore|deps)(\(.+\))?: .+ ]]; then
            echo "✅ Commit message válido: $COMMIT_MSG"
          else
            echo "❌ Commit message inválido: $COMMIT_MSG" >&2
            echo "Formato esperado: type(scope): description" >&2
            echo "Tipos válidos: feat, fix, docs, style, refactor, test, chore, deps" >&2
            exit 1
          fi

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: ci
    if: always()

    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --production

      - name: Advanced Security Audit
        id: security-audit
        run: |
          echo "🔍 Executando auditoria de segurança avançada..."
          npm audit --audit-level=low --json > detailed-audit.json
          
          # Verificar vulnerabilidades críticas
          CRITICAL=$(cat detailed-audit.json | jq '.metadata.vulnerabilities.critical // 0')
          HIGH=$(cat detailed-audit.json | jq '.metadata.vulnerabilities.high // 0')
          
          echo "critical-vulns=$CRITICAL" >> $GITHUB_OUTPUT
          echo "high-vulns=$HIGH" >> $GITHUB_OUTPUT
          
          if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ]; then
            echo "⚠️ Vulnerabilidades críticas/altas encontradas: Critical=$CRITICAL, High=$HIGH"
            echo "security-status=failed" >> $GITHUB_OUTPUT
          else
            echo "✅ Nenhuma vulnerabilidade crítica encontrada"
            echo "security-status=passed" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Upload Detailed Audit
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detailed-security-audit-${{ github.run_number }}
          path: detailed-audit.json
          retention-days: 90

      - name: Security Summary
        if: always()
        run: |
          echo "## 🛡️ Relatório de Segurança" >> $GITHUB_STEP_SUMMARY
          echo "| Métrica | Valor |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Status | ${{ steps.security-audit.outputs.security-status }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Vulnerabilidades Críticas | ${{ steps.security-audit.outputs.critical-vulns }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Vulnerabilidades Altas | ${{ steps.security-audit.outputs.high-vulns }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Data da Análise | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
